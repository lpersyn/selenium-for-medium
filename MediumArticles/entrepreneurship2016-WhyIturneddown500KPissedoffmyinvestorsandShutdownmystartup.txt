I just did what no startup founder is ever supposed to do.
I gave up.
It wasnt even one of those glorious fail fast and fail forward learning experiences. After seven months of hard work and two weeks before we were to start fundraising, we had a good team, glowing praise from beta users, and over $250k in handshake commitments. But I pulled the plug.
My team and most of my investors are pissed, but Im sure I did the right thing. At least I think Im sure.
The business had what I considered to be an unfixable flaw. My investors and my team wanted us to take the funding and figure out how to fix the problem before the money ran out. Ive started four companies in the past with a mixture of exits and bankruptcies, so I understand that this is what startups are supposed to do, but I just couldnt do it this time.
This article is in part my explanation to the various stakeholders, in part self-therapy, and in part a call to other founders and investors to let me know what they would have done in my situation.
I began work on ContractBeast, a SaaS-based contract lifecycle management offering, last October. Unless youve worked in big IT, youve probably never heard of Contract Lifecycle Management or CLM. In brief, CLM covers the authoring, negotiation, execution and storage of both physical and digital contracts with strict access control. It also does things like let you know what contracts are about to expire or automatically renew, and who is responsible for those deals.
CLM is a highly fractured, $7.6 billion global market with over 80 established companies fighting for market share and thats not counting the dozens of e-signature startups that have popped up in recent years. Almost all of these companies are clustered in the enterprise space, where sales-cycles are long and top-down, and where revenues are driven by consulting and customization.
Its a big market begging for disruption. The mid-market of SMBs is grossly underserved and the enterprise market is grossly overpriced. ContractBeast was going to deliver a low-cost SaaS product with no consulting required. We would focus on the mid-market first, and then work our way up to the enterprise.
Our target users responded positively to the mock-ups, and many excitedly asked when they could start using it. I was on the right track. I spent the next few months working evenings and weekends developing an MVP and getting feedback on features as they were implemented.
I left my job in January so I could work on ContractBeast 70+ hours a week. The rest of the team kept their day jobs. That was fine. It made my final decision easier.
We started private beta in early March, and things looked solid. About 35% of our users continued to use the system at least three times per week after completing registration. The UI needed work, but our users raved about how ContractBeast would save them time and worry in the future.
The team was excited. Our potential investors were excited.
But something was wrong. It seemed trivial at first, but it bothered me. Despite glowing praise, our users were only using ContractBeast to create a small percentage of their total new contracts.
I spent the next two weeks visiting our beta users, looking over their shoulders as they worked, and listening to them explain how they planned on using the product. Pressing them directly on why they were not using ContractBeast to create all their contracts resulted in a lot of feature requests.
Now, talking with customers about features is tricky. Often you receive solid and useful ideas. Occasionally a customer will provide an insight that will change the way you look at your product. But most of the time, customers dont really want the the features they are asking for. At least not very badly.
When users are unhappy but cant explain exactly why, they often express that dissatisfaction as a series of tangential, trivial feature requests. We received a lot of ideas like integrating alerts with various messaging platforms, using AI to analyze contract content, and building more sophisticated search features. These arent necessarily bad ideas, but they had nothing to do with why they were not using ContractBeast more extensively.
I might write another article on how to tell these tangential feature requests from useful feature requests. Your customers mean well, but implementing these kinds of features will not make your users any happier in the short term. In any event, I was overwhelmingly getting these kinds of tangential, trivial feature requests.
I couldnt sleep. My users told me they loved the product, and that they planned to use it extensively. But werent really using it much, and I had no idea why.
Sipping decaf coffee at 5:00 AM on a cool May morning, I was re-reading forty pages of notes, user feedback, and profanity. The fatal flaw jumped out at me. ContractBeast provided huge gains in accuracy and efficiency, but those gains came after months of use. It didnt provide a significant immediate benefit.
I was fighting human nature and losing.
Everyone swears they will eat right and exercise, but most dont. Everyone agrees they need to spend less to be financially secure later, but most wont. Our users were telling us they would use ContractBeast to achieve those long-term benefits, but most werent.
When I looked at the contracts the users were creating, I found most of them were ones in which a particular feature provided a clear and immediate benefit. Usually involving contract review and approval.
Human nature sucks.
There were two solutions to this dilemma, we could either change the go-to-market strategy or change the product.
Changing the go-to-market to a top-down, consultative sales approach rather than individual adoption and self-service was an obvious fix. While individuals will rarely make a short-term change to achieve a long-term goal, CIOs have no problem directing employees to do so. Its a big part of their job.
Unfortunately, top-down sales is much more expensive than content marketing and SEO. Running the numbers convinced me that we would have to raise prices to a point that would push us out of the mid-market and into competition with more established, better funded firms. Since we lacked an overwhelming advantage in this market segment, this was a non-starter.
That left us with the option of finding a way to delight our customers in the short term. We started searching for something that would provide that instant gratification. Almost no SMB views contract management as an urgent problem. Unless we found a way to get people actively using ContractBeast during the free trial, converting them to paying users would be difficult.
We reviewed all of the feature requests we received from our users. Some of them were excellent, but none addressed the problem of providing a significant, consistent and immediate benefit. It would have been pointless to implement them.
Weeks of brainstorming and dozens of hypotheses later, we had nothing. Not a single, plausible way of providing our users with the instant gratification their cerebella so desperately crave.
With no clear path forward, investors ready to wire funds, and the team ready to quit their day jobs, I decided to pull the plug.
The team and some of the investors insisted the smart move was to take the funding and pivot our way into solving these problems before the money ran out. Thats the way the game is supposed to be played, and I fully understand why other stakeholders are upset that I am simply taking my ball and going home.
Perhaps we would have figured it out before we ran out of funds, but weeks of brainstorming had not produced a single plausible approach. It would have been different if we had been debating which plan among several to implement or how to shore up specific weaknesses, but we had nothing.
I am not particularly risk-averse, but I pay attention to risk and reward. As an investor, I probably would have told me to take the money and try to make it work. But the risk-reward equation for investors is different than it is for founders.
I was deciding whether this venture was worth committing to another year of 70+ hour weeks. I need a higher level of certainty than investors do because my time is more valuable to me than their money is to them. Investors place bets in a portfolio of companies, but I only have one life.
Over the past few weeks the initial shock has worn off, and the other stakeholders have come around. While still a bit disappointed, everyone now agrees that shutting down was the right call.
I also feel a bit better about my decision than I did when I started this article. Im not sure if youve ever been in this kind of situation, but if you have Id love to hear how you handled it.
Cutting your losses is easy to understand intellectually, but gut-wrenchingly difficult to do in practice.
But sometimes its best to leave the money on the table.
A special thanks to James Riney and David Corbin for their help with early versions of this article. If you want to know more about me or about Japanese startups, check out the Disrupting Japan podcast.

